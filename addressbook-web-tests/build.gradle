apply plugin: 'java'


repositories{
    mavenCentral()
}

configurations {
    agent
}

dependencies{
    compile 'org.testng:testng:6.11'
    compile 'org.seleniumhq.selenium:selenium-java:2.53.1'
    compile 'org.hamcrest:java-hamcrest:2.0.0.0'
    compile 'com.beust:jcommander:1.64'
    compile 'com.thoughtworks.xstream:xstream:1.4.9'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'ch.qos.logback:logback-classic:1.2.2'
    compile 'mysql:mysql-connector-java:6.0.6'
    compile 'org.hibernate:hibernate-core:5.2.10.Final'
    agent "org.aspectj:aspectjweaver:1.8.0"
    compile "ru.yandex.qatools.allure:allure-testng-adaptor:1.4.0.RC4"
    compile 'org.robotframework:robotframework:3.0'
    compile 'info.cukes:cucumber-java:1.2.5'
    compile 'info.cukes:cucumber-testng:1.2.5'
}

task testGroups(type: Test) {
    useTestNG() {
        suites 'src/test/resources/testng-groups.xml'
        if(project.hasProperty('browser')) {  //gradlew -Pbrowser=firefox
            systemProperty 'browser', "${browser}"
        }
        if(project.hasProperty('target')) {  //gradlew -Ptarget=local
            systemProperty 'target', "${target}"
        }
        if(project.hasProperty('verifyUI')) {
            systemProperty 'verifyUI', "${verifyUI}"
        }
        if(project.hasProperty('platform')) {  //gradlew -Pplatform=
            systemProperty 'platform', "${platform}"
        }
    }
}

testGroups.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

task testContacts(type: Test) {
    useTestNG() {
        suites 'src/test/resources/testng-contacts.xml'
        if(project.hasProperty('browser')) {      //gradlew -Pbrowser=firefox
            systemProperty 'browser', "${browser}"
        }
        if(project.hasProperty('target')) {  //gradlew -Ptarget=local
            systemProperty 'target', "${target}"
        }
        if(project.hasProperty('verifyUI')) {  //gradlew -Ptarget=local
            systemProperty 'verifyUI', "${verifyUI}"
        }
        if(project.hasProperty('platform')) {  //gradlew -Pplatform=
            systemProperty 'platform', "${platform}"
        }
    }
}

testContacts.doFirst {
    jvmArgs "-javaagent:${configurations.agent.singleFile}"
}

task rf(type: JavaExec) {
    main = 'org.robotframework.RobotFramework'
    classpath = sourceSets.test.runtimeClasspath
    args '--outputdir', 'build/rf-report'
    args 'src/test/resources/rf'
}
